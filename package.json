{
  "name": "gatewayskipclient",
  "version": "0.0.0",
  "private": true,
  "description": "Description for gatewayskipclient",
  "license": "UNLICENSED",
  "scripts": {
    "app:start": "./mvnw",
    "backend:build-cache": "./mvnw dependency:go-offline",
    "backend:debug": "./mvnw -Dspring-boot.run.jvmArguments=\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000\"",
    "backend:doc:test": "./mvnw -ntp javadoc:javadoc --batch-mode",
    "backend:info": "./mvnw -ntp enforcer:display-info --batch-mode",
    "backend:nohttp:test": "./mvnw -ntp checkstyle:check --batch-mode",
    "backend:start": "./mvnw",
    "backend:unit:test": "./mvnw -ntp verify --batch-mode -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.gateway.skipclient=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test -- -P$npm_package_config_default_environment",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "npm run docker:db:up && npm run docker:others:up && docker ps -a",
    "preci:e2e:server:start": "npm run docker:db:await --if-present && npm run docker:others:await --if-present",
    "ci:e2e:server:start": "java -jar target/e2e.$npm_package_config_packaging --spring.profiles.active=e2e,$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.gateway.skipclient=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker",
    "ci:e2e:teardown:docker": "npm run docker:db:down --if-present && npm run docker:others:down && docker ps -a",
    "clean-www": "rimraf target/classes/static/app/{src,target/}",
    "cleanup": "rimraf target/classes/static/",
    "docker:app:up": "docker-compose -f src/main/docker/app.yml up -d",
    "docker:db:down": "docker-compose -f src/main/docker/mysql.yml down -v",
    "docker:db:up": "docker-compose -f src/main/docker/mysql.yml up -d",
    "docker:keycloak:down": "docker-compose -f src/main/docker/keycloak.yml down -v",
    "docker:keycloak:up": "docker-compose -f src/main/docker/keycloak.yml up -d",
    "docker:others:await": "echo \"Waiting for keycloak to start\" && wait-on -t 180000 http-get://localhost:9080/auth/realms/jhipster && echo \"keycloak started\" || echo \"keycloak not running, make sure oauth2 server is running\"",
    "docker:others:down": "npm run docker:keycloak:down",
    "predocker:others:up": "",
    "docker:others:up": "npm run docker:keycloak:up",
    "java:docker": "./mvnw -ntp verify -DskipTests -Pprod jib:dockerBuild",
    "java:docker:arm64": "npm run java:docker -- -Djib-maven-plugin.architecture=arm64",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "java:jar": "./mvnw -ntp verify -DskipTests --batch-mode",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war": "./mvnw -ntp verify -DskipTests --batch-mode -Pwar",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "prepare": "husky install",
    "prettier:check": "prettier --check \"{,src/**/}*.{md,json,yml,html,java}\"",
    "prettier:format": "prettier --write \"{,src/**/}*.{md,json,yml,html,java}\"",
    "webapp:build": "npm run clean-www && npm run webapp:build:dev",
    "webapp:build:dev": "ng build",
    "webapp:build:prod": "ng build --configuration production",
    "webapp:dev": "ng serve",
    "webapp:prod": "npm run clean-www && npm run webapp:build:prod"
  },
  "config": {
    "backend_port": "8080",
    "default_environment": "prod",
    "packaging": "jar"
  },
  "dependencies": {
    "@akveo/ng2-completer": "9.0.1",
    "@angular/animations": "12.1.0",
    "@angular/cdk": "12.1.0",
    "@angular/common": "12.1.0",
    "@angular/compiler": "12.1.0",
    "@angular/core": "12.1.0",
    "@angular/forms": "12.1.0",
    "@angular/google-maps": "12.1.0",
    "@angular/platform-browser": "12.1.0",
    "@angular/platform-browser-dynamic": "12.1.0",
    "@angular/router": "12.1.0",
    "@asymmetrik/ngx-leaflet": "3.0.1",
    "@nebular/auth": "8.0.0",
    "@nebular/eva-icons": "8.0.0",
    "@nebular/security": "8.0.0",
    "@nebular/theme": "8.0.0",
    "@swimlane/ngx-charts": "14.0.0",
    "angular2-chartjs": "0.4.1",
    "bootstrap": "4.3.1",
    "chart.js": "2.7.1",
    "ckeditor": "4.7.3",
    "classlist.js": "1.1.20150312",
    "core-js": "2.5.1",
    "echarts": "4.0.2",
    "eva-icons": "1.1.3",
    "intl": "1.2.5",
    "ionicons": "2.0.1",
    "leaflet": "1.2.0",
    "nebular-icons": "1.1.0",
    "ng2-ckeditor": "1.2.9",
    "ng2-completer": "9.0.1",
    "ng2-smart-table": "1.6.0",
    "ngx-echarts": "4.2.2",
    "node-sass": "4.12.0",
    "normalize.css": "6.0.0",
    "pace-js": "1.0.2",
    "roboto-fontface": "0.8.0",
    "rxjs": "6.6.2",
    "rxjs-compat": "6.3.0",
    "socicon": "3.0.5",
    "style-loader": "1.1.3",
    "tinymce": "4.5.7",
    "tslib": "^2.1.0",
    "typeface-exo": "0.0.22",
    "web-animations-js": "2.3.2",
    "zone.js": "0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "12.1.0",
    "@angular/cli": "12.1.0",
    "@angular/compiler-cli": "12.1.0",
    "@angular/language-service": "12.1.0",
    "@fortawesome/fontawesome-free": "5.2.0",
    "@types/d3-color": "1.0.5",
    "@types/leaflet": "1.2.3",
    "@types/node": "^12.11.1",
    "codelyzer": "6.0.0",
    "conventional-changelog-cli": "1.3.4",
    "npm-run-all": "4.0.2",
    "rimraf": "2.6.1",
    "stylelint": "7.13.0",
    "ts-node": "3.2.2",
    "tslint": "6.1.0",
    "tslint-language-service": "0.9.9",
    "typescript": "4.2.3",
    "generator-jhipster": "7.8.1",
    "husky": "7.0.4",
    "lint-staged": "12.3.7",
    "prettier": "2.6.2",
    "prettier-plugin-java": "1.6.1",
    "prettier-plugin-packagejson": "2.2.17"
  },
  "engines": {
    "node": ">=16.14.0"
  },
  "cacheDirectories": [
    "node_modules"
  ]
}
